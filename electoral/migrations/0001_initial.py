# Generated by Django 4.1 on 2022-12-29 22:20

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Beneficio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True)),
                ('cantidad', models.PositiveIntegerField(default=1)),
                ('tipo', models.CharField(choices=[('I', 'Individual'), ('C', 'Colectivo')], default='I', max_length=50)),
            ],
            options={
                'verbose_name': 'beneficio',
                'verbose_name_plural': 'beneficios',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CentroVotacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cede', models.CharField(max_length=250, unique=True)),
                ('barrio', models.CharField(blank=True, max_length=250, null=True)),
                ('sector', models.CharField(blank=True, max_length=250, null=True)),
                ('direccion', models.TextField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'centro de votación',
                'verbose_name_plural': 'centros de votación',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Dirigente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150)),
                ('cedula', models.CharField(max_length=50, unique=True, verbose_name='Cédula')),
                ('es_apoyo', models.BooleanField(default=False, verbose_name='Apoyo')),
                ('telefono', models.CharField(blank=True, max_length=50, null=True, verbose_name='Teléfono')),
            ],
            options={
                'verbose_name': 'dirigente',
                'verbose_name_plural': 'dirigentes',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PartidoPolitico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=50, null=True)),
                ('creado_en', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Partido político',
                'verbose_name_plural': 'Partidos políticos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Votante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bloqueado', models.BooleanField(default=False)),
                ('codigo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Código')),
                ('nombre', models.CharField(max_length=150)),
                ('cedula', models.CharField(max_length=50, unique=True, verbose_name='Cédula')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('edad', models.PositiveIntegerField(blank=True, null=True)),
                ('telefono', models.CharField(blank=True, max_length=50, null=True, verbose_name='Teléfono')),
                ('sexo', models.CharField(choices=[('M', 'Maculino'), ('F', 'Femenino')], default='M', max_length=50)),
                ('fecha_inscripcion', models.DateTimeField(auto_now=True)),
                ('mesa', models.PositiveIntegerField(blank=True, null=True)),
                ('centro_votacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='votantes', to='electoral.centrovotacion', verbose_name='Centro de votación')),
                ('dirigente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='votantes', to='electoral.dirigente')),
                ('partido_politico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='votantes', to='electoral.partidopolitico', verbose_name='Partido político')),
            ],
            options={
                'verbose_name': 'votante',
                'verbose_name_plural': 'votantes',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Residencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_casa', models.CharField(blank=True, max_length=50, null=True, verbose_name='N° Casa')),
                ('barriada', models.CharField(blank=True, max_length=250, null=True)),
                ('sector', models.CharField(blank=True, max_length=50, null=True)),
                ('direccion', models.TextField(blank=True, max_length=500, null=True, verbose_name='Dirección')),
                ('votantes', models.ManyToManyField(blank=True, default='Ninguno', related_name='residencia', to='electoral.votante')),
            ],
            options={
                'verbose_name': 'residencia',
                'verbose_name_plural': 'residencias',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Operativo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=50, verbose_name='Título')),
                ('cede', models.CharField(blank=True, max_length=50, null=True)),
                ('barrio', models.CharField(blank=True, max_length=50, null=True)),
                ('sector', models.CharField(blank=True, max_length=50, null=True)),
                ('direccion', models.TextField(blank=True, max_length=500, null=True, verbose_name='Dirección')),
                ('fecha', models.DateTimeField(blank=True, null=True)),
                ('beneficios', models.ManyToManyField(blank=True, default='Ninguno', related_name='operativos', to='electoral.beneficio')),
            ],
            options={
                'verbose_name': 'operativo',
                'verbose_name_plural': 'operativos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Mesa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=250, unique=True)),
                ('centro_votacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='electoral.centrovotacion', verbose_name='Centro de votación')),
            ],
            options={
                'verbose_name': 'mesa',
                'verbose_name_plural': 'mesas',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Entrega',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField()),
                ('fecha', models.DateTimeField(auto_now=True)),
                ('beneficio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='electoral.beneficio')),
            ],
            options={
                'verbose_name': 'entrega',
                'verbose_name_plural': 'entregas',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Corregimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150, unique=True)),
                ('candidato', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corregimiento_related', to='electoral.votante')),
                ('residencias', models.ManyToManyField(blank=True, default='Ninguno', related_name='corregimiento', to='electoral.residencia')),
                ('votantes', models.ManyToManyField(blank=True, default='Ninguno', related_name='corregimiento', to='electoral.votante')),
            ],
            options={
                'verbose_name': 'corregimiento',
                'verbose_name_plural': 'corregimientos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='AsistenciaIndividual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now=True)),
                ('entregas', models.ManyToManyField(blank=True, default='Ninguno', related_name='asistencias', to='electoral.entrega')),
                ('operativo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='electoral.operativo')),
                ('votante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='electoral.votante')),
            ],
            options={
                'verbose_name': 'asistencia individual',
                'verbose_name_plural': 'asistencias individuales',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='AsistenciaColectiva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now=True)),
                ('entregas', models.ManyToManyField(related_name='asistencias_colectivas', to='electoral.entrega')),
                ('operativo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='electoral.operativo')),
                ('residencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='electoral.residencia')),
            ],
            options={
                'verbose_name': 'asistencia colectiva',
                'verbose_name_plural': 'asistencias colectivas',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombre', models.CharField(blank=True, max_length=50, null=True)),
                ('cedula', models.CharField(max_length=25, unique=True, verbose_name='Cédula')),
                ('telefono', models.CharField(blank=True, max_length=25, null=True, verbose_name='Teléfono')),
                ('tema', models.CharField(choices=[('light', 'light'), ('dark', 'dark')], default='light', max_length=10)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Es administrador')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
                'ordering': ['id'],
            },
        ),
    ]
